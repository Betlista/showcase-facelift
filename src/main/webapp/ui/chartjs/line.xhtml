<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml">
    
    <ui:define name="head">
        <style type="text/css">
            .ui-chart {
                margin-bottom: 50px;
            }
        </style>
    </ui:define>

    <ui:define name="title">
        Charts - <span class="subitem">Line</span>
    </ui:define>

    <ui:define name="description">
        LineChart is created with a LineChartModel.
    </ui:define>

    <ui:define name="implementation">       
        <p:lineChart model="#{chartJsView.lineModel}" style="width: 100%; height: 500px;"/>
        
        <p:lineChart model="#{chartJsView.cartesianLinerModel}" style="width: 100%; height: 500px;"/>
    </ui:define>

    <ui:define name="source">
        <p:tabView>
            <p:tab title="line.xhtml">
                <pre name="code" class="brush:xml">
&lt;p:lineChart model="\#{chartJsView.lineModel}" style="width: 100%; height: 500px;"/&gt;
        
&lt;p:lineChart model="\#{chartJsView.cartesianLinerModel}" style="width: 100%; height: 500px;"/&gt;
                </pre>
            </p:tab>

            <p:tab title="ChartJsView.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.view.chartjs;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import org.primefaces.model.charts.ChartData;
import org.primefaces.model.charts.axes.cartesian.CartesianScales;
import org.primefaces.model.charts.axes.cartesian.linear.CartesianLinearAxes;
import org.primefaces.model.charts.axes.cartesian.linear.CartesianLinearTicks;
import org.primefaces.model.charts.line.LineChartDataSet;
import org.primefaces.model.charts.line.LineChartModel;
import org.primefaces.model.charts.line.LineChartOptions;
import org.primefaces.model.charts.optionconfig.title.Title;

@ManagedBean
public class ChartJsView implements Serializable {
    
    private LineChartModel lineModel;
    
    private LineChartModel cartesianLinerModel;

    @PostConstruct
    public void init() {
        createLineModel();
        createCartesianLinerModel();
    }
    
    public void createLineModel() {
        lineModel = new LineChartModel();
        ChartData data = new ChartData();
        
        LineChartDataSet dataSet = new LineChartDataSet();
        List&lt;Number&gt; values = new ArrayList&lt;&gt;();
        values.add(65);
        values.add(59);
        values.add(80);
        values.add(81);
        values.add(56);
        values.add(55);
        values.add(40);
        dataSet.setData(values);
        dataSet.setFill(false);
        dataSet.setLabel("My First Dataset");
        dataSet.setBorderColor("rgb(75, 192, 192)");
        dataSet.setLineTension(0.1);
        data.addChartDataSet(dataSet);
        
        List&lt;String&gt; labels = new ArrayList&lt;&gt;();
        labels.add("January");
        labels.add("February");
        labels.add("March");
        labels.add("April");
        labels.add("May");
        labels.add("June");
        labels.add("July");
        data.setLabels(labels);
        
        //Options
        LineChartOptions options = new LineChartOptions();        
        Title title = new Title();
        title.setDisplay(true);
        title.setText("Line Chart");
        options.setTitle(title);
        
        lineModel.setOptions(options);
        lineModel.setData(data);
    }
    
    public void createCartesianLinerModel() {
        cartesianLinerModel = new LineChartModel();
        ChartData data = new ChartData();
        
        LineChartDataSet dataSet = new LineChartDataSet();
        List&lt;Number&gt; values = new ArrayList&lt;&gt;();
        values.add(20);
        values.add(50);
        values.add(100);
        values.add(75);
        values.add(25);
        values.add(0);
        dataSet.setData(values);
        dataSet.setLabel("Left Dataset");
        dataSet.setYaxisID("left-y-axis");
        
        LineChartDataSet dataSet2 = new LineChartDataSet();
        List&lt;Number&gt; values2 = new ArrayList&lt;&gt;();
        values2.add(0.1);
        values2.add(0.5);
        values2.add(1.0);
        values2.add(2.0);
        values2.add(1.5);
        values2.add(0);
        dataSet2.setData(values2);
        dataSet2.setLabel("Right Dataset");
        dataSet2.setYaxisID("right-y-axis");
        
        data.addChartDataSet(dataSet);
        data.addChartDataSet(dataSet2);
        
        List&lt;String&gt; labels = new ArrayList&lt;&gt;();
        labels.add("Jan");
        labels.add("Feb");
        labels.add("Mar");
        labels.add("Apr");
        labels.add("May");
        labels.add("Jun");
        data.setLabels(labels);
        cartesianLinerModel.setData(data);
        
        //Options
        LineChartOptions options = new LineChartOptions();
        CartesianScales cScales = new CartesianScales();
        CartesianLinearAxes linearAxes = new CartesianLinearAxes();
        linearAxes.setId("left-y-axis");
        linearAxes.setPosition("left");
        CartesianLinearAxes linearAxes2 = new CartesianLinearAxes();
        linearAxes2.setId("right-y-axis");
        linearAxes2.setPosition("right");
        
        cScales.addYAxesData(linearAxes);
        cScales.addYAxesData(linearAxes2);
        options.setScales(cScales);    
        
        Title title = new Title();
        title.setDisplay(true);
        title.setText("Cartesian Linear Chart");
        options.setTitle(title);
        
        cartesianLinerModel.setOptions(options);
    }

    public LineChartModel getLineModel() {
        return lineModel;
    }

    public void setLineModel(LineChartModel lineModel) {
        this.lineModel = lineModel;
    }

    public LineChartModel getCartesianLinerModel() {
        return cartesianLinerModel;
    }

    public void setCartesianLinerModel(LineChartModel cartesianLinerModel) {
        this.cartesianLinerModel = cartesianLinerModel;
    }
}
                </pre>
            </p:tab>

        </p:tabView>
    </ui:define>

</ui:composition>