<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/template.xhtml">

    <ui:define name="title">
        SplitButton
    </ui:define>

    <ui:define name="description">
        SplitButton displays a default command and additional ones in an overlay.
    </ui:define>

    <ui:define name="implementation">

        <h:form>       
            <p:growl id="messages" />

            <h:panelGrid columns="2" style="margin-bottom:10px" cellpadding="5">
                <p:outputLabel for="basic" value="Basic:" />
                <p:splitButton id="basic" value="Save" actionListener="#{buttonView.save}" update="messages" icon="pi pi-save">
                    <p:menuitem value="Update" actionListener="#{buttonView.update}" update="messages" icon="pi pi-refresh" />
                    <p:menuitem value="Delete" actionListener="#{buttonView.delete}" ajax="false" icon="pi pi-times" />
                    <p:separator />
                    <p:menuitem value="Homepage" url="http://www.primefaces.org" icon="pi pi-home" />
                </p:splitButton>  
                
                <p:outputLabel for="dynaButton" value="Programmatic Menu:" />
                <p:splitButton id="dynaButton" value="Save" model="#{buttonView.model}" actionListener="#{buttonView.save}" update="messages" icon="pi pi-save"></p:splitButton>

                <p:outputLabel for="advanced" value="Advanced:" />
                <p:splitButton id="advanced" value="Save" actionListener="#{buttonView.save}" update="messages" icon="pi pi-save" filter="true" filterMatchMode="startsWith">
                    <p:submenu label="Ajax">
                        <p:menuitem value="Save" actionListener="#{buttonView.save}" update="messages" icon="pi pi-save" />
                        <p:menuitem value="Update" actionListener="#{buttonView.update}" update="messages" icon="pi pi-refresh"/>
                    </p:submenu>
                    <p:submenu label="Non-Ajax">
                        <p:menuitem value="Delete" actionListener="#{buttonView.delete}" update="messages" ajax="false" icon="pi pi-times"/>
                    </p:submenu>
                    <p:submenu label="Navigations">
                        <p:menuitem value="External" url="http://www.primefaces.org" icon="pi pi-home"/>
                    </p:submenu>
                    <p:separator />
                    <p:menuitem value="sInternal" icon="pi pi-star"/>
                </p:splitButton> 
            </h:panelGrid>
        </h:form>
        
    </ui:define>

    <ui:define name="source">
        <p:tabView>
            <p:tab title="splitButton.xhtml">
                <pre name="code" class="brush:xml">
&lt;h:form&gt;
    &lt;p:growl id="messages" /&gt;

    &lt;h:panelGrid columns="2" style="margin-bottom:10px" cellpadding="5"&gt;
        &lt;p:outputLabel for="basic" value="Basic:" /&gt;
        &lt;p:splitButton id="basic" value="Save" actionListener="\#{buttonView.save}" update="messages" icon="pi pi-save"&gt;
            &lt;p:menuitem value="Update" actionListener="\#{buttonView.update}" update="messages" icon="pi pi-refresh" /&gt;
            &lt;p:menuitem value="Delete" actionListener="\#{buttonView.delete}" ajax="false" icon="pi pi-times" /&gt;
            &lt;p:separator /&gt;
            &lt;p:menuitem value="Homepage" url="http://www.primefaces.org" icon="pi pi-home" /&gt;
        &lt;/p:splitButton&gt;  

        &lt;p:outputLabel for="dynaButton" value="Programmatic Menu:" /&gt;
        &lt;p:splitButton id="dynaButton" value="Save" model="\#{buttonView.model}" actionListener="\#{buttonView.save}" update="messages" icon="pi pi-save"&gt;&lt;/p:splitButton&gt;

        &lt;p:outputLabel for="advanced" value="Advanced:" /&gt;
        &lt;p:splitButton id="advanced" value="Save" actionListener="\#{buttonView.save}" update="messages" icon="pi pi-save" filter="true" filterMatchMode="startsWith"&gt;
            &lt;p:submenu label="Ajax"&gt;
                &lt;p:menuitem value="Save" actionListener="\#{buttonView.save}" update="messages" icon="pi pi-save" /&gt;
                &lt;p:menuitem value="Update" actionListener="\#{buttonView.update}" update="messages" icon="pi pi-refresh"/&gt;
            &lt;/p:submenu&gt;
            &lt;p:submenu label="Non-Ajax"&gt;
                &lt;p:menuitem value="Delete" actionListener="\#{buttonView.delete}" update="messages" ajax="false" icon="pi pi-times"/&gt;
            &lt;/p:submenu&gt;
            &lt;p:submenu label="Navigations"&gt;
                &lt;p:menuitem value="External" url="http://www.primefaces.org" icon="pi pi-home"/&gt;
            &lt;/p:submenu&gt;
            &lt;p:separator /&gt;
            &lt;p:menuitem value="sInternal" icon="pi pi-star"/&gt;
        &lt;/p:splitButton&gt; 
    &lt;/h:panelGrid&gt;
&lt;/h:form&gt;
                </pre>
            </p:tab>

            <p:tab title="ButtonView.java">
                <pre name="code" class="brush:java">
package org.primefaces.showcase.view.button;

import javax.annotation.PostConstruct;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.context.FacesContext;
import javax.faces.event.ActionEvent;
import org.primefaces.model.menu.DefaultMenuItem;
import org.primefaces.model.menu.DefaultMenuModel;
import org.primefaces.model.menu.DefaultSubMenu;
import org.primefaces.model.menu.MenuModel;

@ManagedBean
public class ButtonView {
    
    private MenuModel model;

    @PostConstruct
    public void init() {
        model = new DefaultMenuModel();

        //First submenu
        DefaultSubMenu firstSubmenu = new DefaultSubMenu("Dynamic Submenu");

        DefaultMenuItem item = new DefaultMenuItem("External");
        item.setUrl("http://www.primefaces.org");
        item.setIcon("pi pi-home");
        firstSubmenu.addElement(item);

        model.addElement(firstSubmenu);

        //Second submenu
        DefaultSubMenu secondSubmenu = new DefaultSubMenu("Dynamic Actions");

        item = new DefaultMenuItem("Save");
        item.setIcon("pi pi-save");
        item.setCommand("\#{buttonView.save}");
        item.setUpdate("messages");
        secondSubmenu.addElement(item);

        item = new DefaultMenuItem("Delete");
        item.setIcon("pi pi-times");
        item.setCommand("\#{buttonView.delete}");
        item.setAjax(false);
        secondSubmenu.addElement(item);

        model.addElement(secondSubmenu);
    }

    public MenuModel getModel() {
        return model;
    }

    public void save(ActionEvent actionEvent) {
        addMessage("Data saved");
    }

    public void update(ActionEvent actionEvent) {
        addMessage("Data updated");
    }

    public void delete(ActionEvent actionEvent) {
        addMessage("Data deleted");
    }

    public void buttonAction(ActionEvent actionEvent) {
        addMessage("Welcome to Primefaces!!");
    }

    public void addMessage(String summary) {
        FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO, summary, null);
        FacesContext.getCurrentInstance().addMessage(null, message);
    }
}
                </pre>
            </p:tab>
        </p:tabView>

    </ui:define>

</ui:composition>
